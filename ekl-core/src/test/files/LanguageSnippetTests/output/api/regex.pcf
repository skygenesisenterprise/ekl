examples {
  ["construction"] {
    Regex("abc")
    true
  }
  ["pattern"] {
    ""
    "(?i)abc"
    "a(\\s*)b(\\s*)c"
    "a(?:\\s*)b\\(c\\)"
  }
  ["groupCount"] {
    0
    0
    2
    0
  }
  ["findMatchesIn()"] {
    List()
    List(new {
      value = "[*]"
      start = 0
      end = 3
      groups = List(new {
        value = "[*]"
        start = 0
        end = 3
        groups = List()
      })
    }, new {
      value = "[*]"
      start = 8
      end = 11
      groups = List(new {
        value = "[*]"
        start = 8
        end = 11
        groups = List()
      })
    })
    List(new {
      value = ""
      start = 0
      end = 0
      groups = List(new {
        value = ""
        start = 0
        end = 0
        groups = List()
      })
    }, new {
      value = ""
      start = 1
      end = 1
      groups = List(new {
        value = ""
        start = 1
        end = 1
        groups = List()
      })
    }, new {
      value = ""
      start = 2
      end = 2
      groups = List(new {
        value = ""
        start = 2
        end = 2
        groups = List()
      })
    }, new {
      value = ""
      start = 3
      end = 3
      groups = List(new {
        value = ""
        start = 3
        end = 3
        groups = List()
      })
    }, new {
      value = ""
      start = 4
      end = 4
      groups = List(new {
        value = ""
        start = 4
        end = 4
        groups = List()
      })
    }, new {
      value = ""
      start = 5
      end = 5
      groups = List(new {
        value = ""
        start = 5
        end = 5
        groups = List()
      })
    }, new {
      value = ""
      start = 6
      end = 6
      groups = List(new {
        value = ""
        start = 6
        end = 6
        groups = List()
      })
    }, new {
      value = ""
      start = 7
      end = 7
      groups = List(new {
        value = ""
        start = 7
        end = 7
        groups = List()
      })
    }, new {
      value = ""
      start = 8
      end = 8
      groups = List(new {
        value = ""
        start = 8
        end = 8
        groups = List()
      })
    }, new {
      value = ""
      start = 9
      end = 9
      groups = List(new {
        value = ""
        start = 9
        end = 9
        groups = List()
      })
    }, new {
      value = ""
      start = 10
      end = 10
      groups = List(new {
        value = ""
        start = 10
        end = 10
        groups = List()
      })
    }, new {
      value = ""
      start = 11
      end = 11
      groups = List(new {
        value = ""
        start = 11
        end = 11
        groups = List()
      })
    })
    List(new {
      value = "[*] ... [*]"
      start = 0
      end = 11
      groups = List(new {
        value = "[*] ... [*]"
        start = 0
        end = 11
        groups = List()
      })
    }, new {
      value = ""
      start = 11
      end = 11
      groups = List(new {
        value = ""
        start = 11
        end = 11
        groups = List()
      })
    })
    "Syntax error in regex `*`: Dangling meta character '*' near index 0 * ^"
    List(new {
      value = "fooPigeonbarBarnOwl"
      start = 0
      end = 19
      groups = List(new {
        value = "fooPigeonbarBarnOwl"
        start = 0
        end = 19
        groups = List()
      }, new {
        value = "Pigeon"
        start = 3
        end = 9
        groups = List()
      }, new {
        value = "BarnOwl"
        start = 12
        end = 19
        groups = List()
      })
    })
    List(new {
      value = "fooPigeonbarBarnOwl"
      start = 6
      end = 25
      groups = List(new {
        value = "fooPigeonbarBarnOwl"
        start = 6
        end = 25
        groups = List()
      }, new {
        value = "Pigeon"
        start = 9
        end = 15
        groups = List()
      }, new {
        value = "BarnOwl"
        start = 18
        end = 25
        groups = List()
      })
    }, new {
      value = "fooParrotbarElfOwl"
      start = 32
      end = 50
      groups = List(new {
        value = "fooParrotbarElfOwl"
        start = 32
        end = 50
        groups = List()
      }, new {
        value = "Parrot"
        start = 35
        end = 41
        groups = List()
      }, new {
        value = "ElfOwl"
        start = 44
        end = 50
        groups = List()
      })
    })
    List(new {
      value = "abc"
      start = 3
      end = 6
      groups = List(new {
        value = "abc"
        start = 3
        end = 6
        groups = List()
      }, new {
        value = "abc"
        start = 3
        end = 6
        groups = List()
      }, null)
    }, new {
      value = "def"
      start = 9
      end = 12
      groups = List(new {
        value = "def"
        start = 9
        end = 12
        groups = List()
      }, null, new {
        value = "def"
        start = 9
        end = 12
        groups = List()
      })
    }, new {
      value = "abc"
      start = 15
      end = 18
      groups = List(new {
        value = "abc"
        start = 15
        end = 18
        groups = List()
      }, new {
        value = "abc"
        start = 15
        end = 18
        groups = List()
      }, null)
    })
    List("abc", "def")
    List("abc", "a", "bc")
  }
  ["matchEntire()"] {
    new {
      value = "123abc"
      start = 0
      end = 6
      groups = List(new {
        value = "123abc"
        start = 0
        end = 6
        groups = List()
      }, new {
        value = "123"
        start = 0
        end = 3
        groups = List()
      })
    }
    null
  }
}
